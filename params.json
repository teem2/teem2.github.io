{"name":"dreem ","tagline":"(by teem)","body":"# api docs\r\n\r\nApi docs can be found here: http://teem2.github.io/dreem/docs/api/\r\n\r\n# getting started with dreem\r\n\r\nIt is quick and easy to get started writing your dreem application, first install [Node.js v0.10.x](http://nodejs.org/download/) and [Ruby 2.x](http://rubyinstaller.org/downloads/), and then clone the repo:\r\n\r\n    git clone https://github.com/teem2/dreem.git\r\n\r\nAfter cloning the project, install the required node modules:\r\n\r\n    npm install\r\n    \r\nAnd run bundler (install bundler with `gem install bundler` if required):\r\n    \r\n    bundle install\r\n\r\nYou will need to serve the dreem files through a web server to satisfy the browser's same-origin policy.  From within the dreem root directory just run:\r\n\r\n    ./bin/teemserver\r\n    \r\nThis will turn that directory into a webserver and allow you to run any of the example files on localhost, such as [http://localhost:8080/examples/spirallayout.html](http://localhost:8080/examples/spirallayout.html)\r\n\r\nThat's all you need to do to get set up to build a dreem application. There are many sample files in the root directory that you can reference to get familiar with the language. You will also want to build the API documentation to run on your machine as it is currently not hosted anywhere on the web. This is a simple process, and instructions are included below.\r\n\r\n### getting started on Windows\r\n\r\nOn some Windows installations it may ne necessary to install the ruby [Development Kit, described here](https://github.com/oneclick/rubyinstaller/wiki/Development-Kit).  \r\n\r\n# adding your own dreem code\r\n\r\nYou can put your dreem files right in the root dreem directory or a subdirectory to get started, or use a symlink to another directory, for example this:\r\n\r\n    ln -s ~/dev/mydreemapp ./mydreemapp\r\n\r\nAllow you to access your files from `/mydreemapp/` here: [http://localhost:8080/mydreemapp/](http://localhost:8080/mydreemapp/)\r\n\r\nIf you would like a pace from which to serve Dreem projects without placing them in the root, you can use the special `/projects` path by specifing the `DREEM_PROJECTS_ROOT` environment variable on the command line.  For example:\r\n\r\n    DREEM_PROJECTS_ROOT=\"../apps/demos/\" ./bin/teemserver\r\n    \r\nWill mount the `../apps/demos/` directory under the `/projects` url [http://localhost:8080/projects/](http://localhost:8080/projects/).  \r\n\r\n# loading external components\r\n\r\nIf you have additional external components to load, place them all in a top-level directory and use the `DREEM_COMPONENTS_ROOT` variable to indicate where to find them:\r\n\r\n    DREEM_COMPONENTS_ROOT=\"../workspace/components/\" ./bin/teemserver\r\n    \r\nAdditional server settings can be found on the [teemserver README](https://github.com/teem2/server).\r\n\r\n# building the documentation\r\n--------------------------\r\n\r\nThe API docs are always available [here](http://teem2.github.io/dreem/docs/api/), but can be built manually with [https://github.com/senchalabs/jsduck](https://github.com/senchalabs/jsduck). Install jsduck as a ruby gem using bundler by running the following:\r\n\r\n    gem install bundler\r\n    bundle install\r\n\r\nIf you are on mac 10.9.x and you get an error concerning nokogiri, try this\r\n    sudo gem install nokogiri -- --with-iconv-dir=/usr/lib\r\n\r\nIf you are using rvm or similar your gems will be installed in a gemset called 'dreem'.\r\n\r\nWith jsduck installed run:\r\n\r\n\t./bin/builddocs\r\n\r\n# building Snap.svg\r\n\r\nThe art component uses a customized version of Snap.svg to display svg files. The changes allow any frame between two paths to be displayed. See [https://github.com/teem2/Snap.svg](https://github.com/teem2/Snap.svg) for build instructions. Once built, a copy of [https://github.com/teem2/Snap.svg/blob/master/dist/snap.svg-min.js](https://github.com/teem2/Snap.svg/blob/master/dist/snap.svg-min.js) should be copied into this repository at [https://github.com/teem2/dreem/tree/master/lib](https://github.com/teem2/dreem/tree/master/lib).\r\n\r\n# testing dreem\r\n\r\n## running smoke tests\r\n\r\nThe smoke tests docs are run with [http://phantomjs.org/ 1.9.8](http://phantomjs.org/), so you'll need to install it with:\r\n\r\n    npm install phantomjs@1.9.8\r\n \r\n(note: phantomjs2.0 currently cannot run all the tests successfully, use no later than 1.9.8). After you've installed it, run:\r\n\r\n    phantomjs ./bin/phantomrunner.js\r\n\r\nIf you get RESOURCE ERROR messages, try specifying a different timeout argument. The smaller the number, the faster the tests will run:\r\n    \r\n    phantomjs ./bin/phantomrunner.js 100\r\n\r\nFinally, you may get better performance if you utilize phantom's disk cache:\r\n\r\n    phantomjs ./bin/phantomrunner.js 100 --disk-cache\r\n\r\nYou can also target a specific smoke test by naming it on the commandline\r\n\r\n    phantomjs ./bin/phantomrunner.js art.html\r\n\r\n    \r\n## running the component tests\r\n\r\nThe components are tested with rspec and capybara. You will need to install the required gems to run them. If you haven't already:\r\n\r\n    gem install bundler\r\n    bundle install\r\n    \r\nNow to run the specs run\r\n\r\n    rspec\r\n    \r\nIf you see an error like:\r\n\r\n    Gem::Ext::BuildError: ERROR: Failed to build gem native extension.\r\n\r\n        ruby extconf.rb\r\n    Command 'qmake -spec macx-g++ ' not available\r\n\r\n    Makefile not found\r\n\r\n    Gem files will remain installed in /Users/maxcarlson/.rvm/gems/ruby-2.0.0-p481@dreem/gems/capybara-webkit-1.3.0 for inspection.\r\n    Results logged to /Users/maxcarlson/.rvm/gems/ruby-2.0.0-p481@dreem/extensions/x86_64-darwin-13/2.0.0-static/capybara-webkit-1.3.0/gem_make.out\r\n\r\n    An error occurred while installing capybara-webkit (1.3.0), and Bundler cannot continue.\r\n    Make sure that `gem install capybara-webkit -v '1.3.0'` succeeds before bundling.\r\n\r\nPer [http://stackoverflow.com/questions/11354656/error-error-error-installing-capybara-webkit](http://stackoverflow.com/questions/11354656/error-error-error-installing-capybara-webkit) if you are in Ubuntu:\r\n\r\n    sudo apt-get install qt4-dev-tools libqt4-dev libqt4-core libqt4-gui\r\n\r\nIf you are on Mac\r\n\r\n    brew install qt\r\n\r\nThen run this again:\r\n\r\n    bundle install    \r\n\r\nWindows users: capybara-webkit can only install on a 32-bit version of Windows. See [https://github.com/thoughtbot/capybara-webkit#windows-support](https://github.com/thoughtbot/capybara-webkit#windows-support)\r\n\t\t\r\n<!-- The MIT License (MIT)\r\n\r\nCopyright ( c ) 2014 Teem2 LLC\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\nSOFTWARE. -->\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}